export declare type Complex = [number, number];
export declare const i: Complex;
export declare const one: Complex;
export declare function complex(r?: number, i?: number): Complex;
export default complex;
export declare function add(a: Complex, b: Complex): Complex;
export declare function sub(a: Complex, b: Complex): Complex;
export declare function mul(a: Complex, b: Complex): Complex;
export declare function inverse(z: Complex): Complex;
export declare function div(a: Complex, b: Complex): Complex;
export declare function neg(z: Complex): Complex;
export declare function arg(z: Complex): number;
export declare function mag(z: Complex): number;
export declare function conj(z: Complex): Complex;
export declare function sqrt(z: Complex): Complex;
export declare function sqr(z: Complex): Complex;
export declare function exp(z: Complex): Complex;
export declare function log(z: Complex): Complex;
export declare function pow(z: Complex, n: number): Complex;
export declare function pow_complex(z: Complex, n: Complex): Complex;
export declare function sin(z: Complex): Complex;
export declare function cos(z: Complex): Complex;
export declare function tan(z: Complex): Complex;
export declare function asin(z: Complex): Complex;
export declare function acos(z: Complex): Complex;
export declare function atan(z: Complex): Complex;
export declare function sinh(z: Complex): Complex;
export declare function cosh(z: Complex): Complex;
export declare function tanh(z: Complex): Complex;
